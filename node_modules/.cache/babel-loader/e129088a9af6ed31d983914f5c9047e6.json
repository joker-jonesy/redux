{"ast":null,"code":"import _slicedToArray from \"/Users/lukejones/GitHub/redux/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lukejones/GitHub/redux/src/components/products/Products.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeSort } from \"../../redux/actions/setActions\";\n\nfunction Products(props) {\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        items = _React$useState2[0],\n        setItems = _React$useState2[1];\n\n  const user = useSelector(state => state.user);\n  const cart = useSelector(state => state.cart);\n  const sort = useSelector(state => state.sort);\n\n  const _React$useState3 = React.useState(user.country),\n        _React$useState4 = _slicedToArray(_React$useState3, 1),\n        country = _React$useState4[0];\n\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    let sortedList = cart;\n\n    for (let i in sort) {\n      if (sort[i].toggle) {\n        sortedList = sortedList.filter(it => {\n          return sort[i].val.includes(it[i]);\n        });\n      }\n    }\n\n    setItems(sortedList);\n  }, [sort, cart]);\n  let itemsEle = items.map((it, idx) => React.createElement(\"div\", {\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, it.name), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, country === \"USA\" && \"Cost in USA:\" + it.cost.USA), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, country === \"CANADA\" && \"Cost in CANADA:\" + it.cost.CANADA), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, country === \"UK\" && \"Cost in UK:\" + it.cost.UK)));\n  let style = {\n    color: \"red\"\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    style: sort.type.val.includes(\"shirt\") ? style : null,\n    onClick: () => dispatch(changeSort(\"type\", \"shirt\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Shirts\"), React.createElement(\"button\", {\n    onClick: () => dispatch(changeSort(\"type\", \"pants\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Pants\"), React.createElement(\"button\", {\n    onClick: () => dispatch(changeSort(\"color\", \"red\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Red\"), React.createElement(\"button\", {\n    onClick: () => dispatch(changeSort(\"color\", \"green\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Green\"), React.createElement(\"button\", {\n    onClick: () => dispatch(changeSort(\"color\", \"blue\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Blue\"), items.length === 0 ? \"No Items Filtered\" : itemsEle);\n}\n\nexport default Products;","map":{"version":3,"sources":["/Users/lukejones/GitHub/redux/src/components/products/Products.js"],"names":["React","useSelector","useDispatch","changeSort","Products","props","useState","items","setItems","user","state","cart","sort","country","dispatch","useEffect","sortedList","i","toggle","filter","it","val","includes","itemsEle","map","idx","name","cost","USA","CANADA","UK","style","color","type","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {changeSort} from \"../../redux/actions/setActions\";\n\nfunction Products(props){\n    const [items, setItems]=React.useState([]);\n    const user = useSelector(state=>state.user);\n    const cart= useSelector(state=>state.cart);\n    const sort= useSelector(state=>state.sort);\n    const [country] = React.useState(user.country);\n    const dispatch = useDispatch();\n\n    React.useEffect(()=>{\n        let sortedList = cart;\n            for(let i in sort){\n               if(sort[i].toggle){\n                   sortedList=sortedList.filter(it=>{\n                       return sort[i].val.includes(it[i])\n                   });\n               }\n            }\n\n\n        setItems(sortedList);\n    },[sort, cart]);\n\n\n\n\n    let itemsEle = items.map((it, idx)=>\n\n        <div key={idx}>\n            <h1>{it.name}</h1>\n            <h4>{country===\"USA\"&&\"Cost in USA:\"+it.cost.USA}</h4>\n            <h4>{country===\"CANADA\"&&\"Cost in CANADA:\"+it.cost.CANADA}</h4>\n            <h4>{country===\"UK\"&&\"Cost in UK:\"+it.cost.UK}</h4>\n        </div>\n    );\n\n    let style={\n        color:\"red\"\n    };\n\n    return(\n        <div>\n            <button style={sort.type.val.includes(\"shirt\")?style:null} onClick={()=>dispatch(changeSort(\"type\",\"shirt\"))}>Shirts</button>\n            <button onClick={()=>dispatch(changeSort(\"type\",\"pants\"))}>Pants</button>\n            <button onClick={()=>dispatch(changeSort(\"color\",\"red\"))}>Red</button>\n            <button onClick={()=>dispatch(changeSort(\"color\",\"green\"))}>Green</button>\n            <button onClick={()=>dispatch(changeSort(\"color\",\"blue\"))}>Blue</button>\n            {items.length===0?\"No Items Filtered\":itemsEle}\n        </div>\n    )\n}\n\nexport default Products;"]},"metadata":{},"sourceType":"module"}