{"ast":null,"code":"import _objectSpread from \"/Users/lukejones/GitHub/redux/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/lukejones/GitHub/redux/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lukejones/GitHub/redux/src/components/firebaseProducts/FireBaseProducts.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeSort, checkChange } from \"../../redux/actions/setActions\";\nimport fire from \"../../firebase/Fire\";\n\nfunction FirebaseProducts(props) {\n  const user = useSelector(state => state.user);\n  const cart = useSelector(state => state.cart);\n\n  const _React$useState = React.useState(cart),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        items = _React$useState2[0],\n        setItems = _React$useState2[1];\n\n  const sort = useSelector(state => state.sort);\n\n  const _React$useState3 = React.useState(user.country),\n        _React$useState4 = _slicedToArray(_React$useState3, 1),\n        country = _React$useState4[0];\n\n  const dispatch = useDispatch();\n\n  const _React$useState5 = React.useState({\n    color: \"\",\n    cost: {\n      USA: \"\",\n      CANADA: \"\",\n      UK: \"\"\n    },\n    name: \"\",\n    type: \"\"\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        value = _React$useState6[0],\n        setValues = _React$useState6[1];\n\n  const db = fire.firestore();\n  React.useEffect(() => {\n    let sortedList = cart;\n\n    for (let i in sort) {\n      if (sort[i].toggle) {\n        sortedList = sortedList.filter(it => {\n          return sort[i].val.includes(it[i]);\n        });\n      }\n    }\n\n    setItems(sortedList);\n  }, [sort, cart]);\n\n  const handleChange = prop => event => {\n    if (prop === \"cost\") {\n      setValues(_objectSpread({}, value, {\n        [prop]: {\n          USA: Number(event.target.value),\n          CANADA: Number(event.target.value) + 5,\n          UK: Number(event.target.value) / 2\n        }\n      }));\n    } else {\n      setValues(_objectSpread({}, value, {\n        [prop]: event.target.value\n      }));\n    }\n  };\n\n  const submit = () => {\n    if (!isNaN(value.cost.USA)) {\n      db.collection(\"products\").add(value).then(() => {\n        setValues({\n          color: \"\",\n          cost: {\n            USA: \"\",\n            CANADA: \"\",\n            UK: \"\"\n          },\n          name: \"\",\n          type: \"\"\n        });\n        dispatch(checkChange());\n      });\n    }\n  };\n\n  const deleteItem = id => {\n    db.collection(\"products\").doc(id).delete().then(() => {\n      dispatch(checkChange());\n    });\n  };\n\n  let itemsEle = items.map((it, idx) => React.createElement(\"div\", {\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, it.name), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, country === \"USA\" && \"Cost in USA:\" + it.cost.USA), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, country === \"CANADA\" && \"Cost in CANADA:\" + it.cost.CANADA), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, country === \"UK\" && \"Cost in UK:\" + it.cost.UK), React.createElement(\"button\", {\n    onClick: () => {\n      deleteItem(it.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Delete Me\")));\n  let style = {\n    color: \"red\"\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    style: sort.type.val.includes(\"shirt\") ? style : null,\n    onClick: () => dispatch(changeSort(\"type\", \"shirt\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Shirts\"), React.createElement(\"button\", {\n    onClick: () => dispatch(changeSort(\"type\", \"pants\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Pants\"), React.createElement(\"button\", {\n    onClick: () => dispatch(changeSort(\"color\", \"red\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Red\"), React.createElement(\"button\", {\n    onClick: () => dispatch(changeSort(\"color\", \"green\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Green\"), React.createElement(\"button\", {\n    onClick: () => dispatch(changeSort(\"color\", \"blue\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Blue\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    onChange: handleChange(\"name\"),\n    value: value.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Cost\",\n    onChange: handleChange(\"cost\"),\n    value: value.cost.USA,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type\",\n    onChange: handleChange(\"type\"),\n    value: value.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Color\",\n    onChange: handleChange(\"color\"),\n    value: value.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Submit\")), items.length === 0 ? \"No Items Filtered\" : itemsEle);\n}\n\nexport default FirebaseProducts;","map":{"version":3,"sources":["/Users/lukejones/GitHub/redux/src/components/firebaseProducts/FireBaseProducts.js"],"names":["React","useSelector","useDispatch","changeSort","checkChange","fire","FirebaseProducts","props","user","state","cart","useState","items","setItems","sort","country","dispatch","color","cost","USA","CANADA","UK","name","type","value","setValues","db","firestore","useEffect","sortedList","i","toggle","filter","it","val","includes","handleChange","prop","event","Number","target","submit","isNaN","collection","add","then","deleteItem","id","doc","delete","itemsEle","map","idx","style","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {changeSort, checkChange} from \"../../redux/actions/setActions\";\nimport fire from \"../../firebase/Fire\";\n\nfunction FirebaseProducts(props) {\n    const user = useSelector(state => state.user);\n    const cart = useSelector(state => state.cart);\n    const [items, setItems]=React.useState(cart);\n    const sort= useSelector(state=>state.sort);\n    const [country] = React.useState(user.country);\n    const dispatch=useDispatch();\n    const [value, setValues] = React.useState({\n        color: \"\",\n        cost: {\n            USA: \"\",\n            CANADA: \"\",\n            UK: \"\"\n        },\n        name: \"\",\n        type: \"\"\n    });\n\n\n    const db = fire.firestore();\n\n    React.useEffect(()=>{\n        let sortedList = cart;\n        for(let i in sort){\n            if(sort[i].toggle){\n                sortedList=sortedList.filter(it=>{\n                    return sort[i].val.includes(it[i])\n                });\n            }\n        }\n\n\n        setItems(sortedList);\n    },[sort, cart]);\n\n    const handleChange = prop => event => {\n        if (prop === \"cost\") {\n            setValues({\n                ...value, [prop]: {\n                    USA: Number(event.target.value),\n                    CANADA: Number(event.target.value)+5,\n                    UK: Number(event.target.value)/2\n\n                }\n            });\n        } else {\n            setValues({...value, [prop]: event.target.value});\n        }\n\n    };\n\n    const submit =()=>{\n        if(!isNaN(value.cost.USA)){\n            db.collection(\"products\").add(value).then(()=>{\n                    setValues({\n                        color: \"\",\n                        cost: {\n                            USA: \"\",\n                            CANADA: \"\",\n                            UK: \"\"\n                        },\n                        name: \"\",\n                        type: \"\"\n                    });\n                    dispatch(checkChange());\n            });\n\n        }\n\n    };\n\n    const deleteItem =(id)=>{\n        db.collection(\"products\").doc(id).delete().then(()=>{\n            dispatch(checkChange());\n        })\n    };\n\n\n    let itemsEle = items.map((it, idx) =>\n\n        <div key={idx}>\n            <h1>{it.name}</h1>\n            <h4>{country === \"USA\" && \"Cost in USA:\" + it.cost.USA}</h4>\n            <h4>{country === \"CANADA\" && \"Cost in CANADA:\" + it.cost.CANADA}</h4>\n            <h4>{country === \"UK\" && \"Cost in UK:\" + it.cost.UK}</h4>\n            <button onClick={()=>{deleteItem(it.id)}}>Delete Me</button>\n        </div>\n    );\n\n    let style = {\n        color: \"red\"\n    };\n\n    return (\n        <div>\n            <div>\n\n                <button style={sort.type.val.includes(\"shirt\")?style:null} onClick={()=>dispatch(changeSort(\"type\",\"shirt\"))}>Shirts</button>\n                <button onClick={()=>dispatch(changeSort(\"type\",\"pants\"))}>Pants</button>\n                <button onClick={()=>dispatch(changeSort(\"color\",\"red\"))}>Red</button>\n                <button onClick={()=>dispatch(changeSort(\"color\",\"green\"))}>Green</button>\n                <button onClick={()=>dispatch(changeSort(\"color\",\"blue\"))}>Blue</button>\n\n                <input type=\"text\" placeholder=\"Name\" onChange={handleChange(\"name\")} value={value.name}/>\n                <input type=\"text\" placeholder=\"Cost\" onChange={handleChange(\"cost\")} value={value.cost.USA}/>\n                <input type=\"text\" placeholder=\"Type\" onChange={handleChange(\"type\")} value={value.type}/>\n                <input type=\"text\" placeholder=\"Color\" onChange={handleChange(\"color\")} value={value.color}/>\n                <button onClick={submit}>Submit</button>\n            </div>\n            {items.length === 0 ? \"No Items Filtered\" : itemsEle}\n        </div>\n    )\n}\n\nexport default FirebaseProducts;"]},"metadata":{},"sourceType":"module"}